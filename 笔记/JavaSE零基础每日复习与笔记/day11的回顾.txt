
1、方法是什么？
	方法是一段可以完成某个特定功能的并且可以被重复利用的代码片段。
	方法的出现，让代码具有了很强的复用性。

2、方法最难实现的是：
	根据业务怎么进行方法的抽取。
	方法的返回值类型定义为 什么？
	方法的名字叫什么？
	方法的形式参数列表定义为 什么？
	....
	一个方法就是一个独立的功能。

3、方法的定义

	[修饰符列表] 返回值类型 方法名(形式参数列表){
		方法体; 
	}

4、方法的每一个细节学习
	4.1、修饰符列表：可选项，目前先写成：public static 
	4.2、怎么理解返回值？返回值是一个方法执行结束之后的结果。
	4.3、返回值类型都可以指定哪些类型？
	4.4、返回值和“return语句”的关系。
	4.5、方法名只要是合法的标识符就行，首字母小写，后面每个单词首字母大写。见名知意。
	4.6、形式参数列表
	4.7、方法体：方法体当中的代码遵循自上而下的顺序依次逐行执行。
	4.8、方法怎么调用？“类名.”什么时候可以省略？
		实际参数列表，简称实参。（调用方法时传递的实际数据。）
		实参和形参的关系是一一对应。

5、JVM的内存结构中三块比较重要的内存空间。
	方法区：
		存储代码片段，存储xxx.class字节码文件，这个空间是最先有数据的，
		类加载器首先将代码加载到这里。
	堆内存：
		后面讲（面向对象）
	栈内存：
		stack栈当中存储什么？
			每个方法执行时所需要的内存空间（局部变量）。

6、关于数据结构中的栈数据结构
	原则：
		后进先出
		先进后出
	栈数据结构相关的术语：
		栈帧：永远指向栈顶部的元素（栈顶元素具有活跃权。）
		栈顶元素
		栈底元素
		压栈，入栈，进栈，push
		弹栈，出栈，pop
	
	昨天还聊了一些：什么是数据结构？什么是算法？
		有一本书：数据结构与算法。
		数据结构和算法的选择很重要，选择对了程序的执行效率大大提升。
		可以很好的优化程序。

7、分析程序运行过程中的内存变化
	方法只定义不调用是不会执行的。
	方法调用时：压栈 （在栈中给该方法分配空间）
	方法执行结束时：弹栈（将该方法占用的空间释放，局部变量的内存也释放。）
