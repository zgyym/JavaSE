day14课堂笔记

1、画内存图注意事项：

	第一：大家在内存图上不要体现出代码。内存上应该主要体现“数据”。

	第二：大家画图的时候，图上的图形应该有先后顺序，先画什么，再
	画什么，必须是有顺序的，而不是想起来这个画这个，想起来那个画那个。
	程序代码是有执行顺序的，程序执行到哪里你就画哪里就行了。

2、为什么要画内存图（非常重要）？
	第一：有了内存图，程序不运行，我也知道结果。（可以推算出结果）
	第二：有了内存图，有助于你调试程序。
	画内存图是对Java运行机制的一种理解。不知道运行机制，以后复杂的
	程序出现错误之后你是不会调试的，调不明白。

3、程序在什么情况下会出现空指针异常呢？
	空引用 访问 "对象相关"的数据时，会出现空指针异常。
	垃圾回收器主要针对堆内存。

4、方法在调用的时候参数是如何传递的？
	实际上，在java语言中，方法调用时参数传递，和类型无关，都是将变量中保存
	的那个“值”传过去，这个“值”可能是一个数字100，也可能是一个java对象的内存
	地址：0x1234
		记住这句话：不管是哪一种数据类型的传递，都是将“变量中保存的那个值复制一份传递过去。”

5、构造方法。
	5.1、当一个类中没有提供任何构造方法，系统默认提供一个无参数的构造方法。
	这个无参数的构造方法叫做缺省构造器。

	5.2、当一个类中手动的提供了构造方法，那么系统将不再默认提供无参数构造方法。
	建议将无参数构造方法手动的写出来，这样一定不会出问题。

	5.3、无参数构造方法和有参数的构造方法都可以调用。
		Student x = new Student();
		Student y = new Student(123);
	
	5.4、构造方法支持方法重载吗？
		构造方法是支持方法重载的。
		在一个类当中构造方法可以有多个。
		并且所有的构造方法名字都是一样的。

		方法重载特点：
			在同一个类中，方法名相同，参数列表不同。

	5.5、对于实例变量来说，只要你在构造方法中没有手动给它赋值，
	统一都会默认赋值。默认赋系统值。

	构造方法需要掌握的知识点：
		1.构造方法有什么作用？
		2.构造方法怎么定义，语法是什么？
		3.构造方法怎么调用，使用哪个运算符？
		4.什么是缺省构造器？
		5.怎么防止缺省构造器丢失？
		6.实例变量在类加载是初始化吗？实例变量在什么时候初始化？

6、封装

	6.1、面向对象的三大特征：
		封装
		继承
		多态

		有了封装，才有继承，有了继承，才能说多态。
	
	6.2、面向对象的首要特征：封装 。什么是封装？有什么用？
		现实生活中有很多现实的例子都是封装的，例如：
			手机，电视机，笔记本电脑，照相机，这些都是外部有一个坚硬的壳儿。
			封装起来，保护内部的部件。保证内部的部件是安全的。另外封装了之后，
			对于我们使用者来说，我们是看不见内部的复杂结构的，我们也不需要关心
			内部有多么复杂，我们只需要操作外部壳儿上的几个按钮就可以完成操作。

		那么封装，你觉得有什么用呢？
			封装的作用有两个：
				第一个作用：保证内部结构的安全。
				第二个作用：屏蔽复杂，暴露简单。
			
		在代码级别上，封装有什么用？
			一个类体当中的数据，假设封装之后，对于代码的调用人员来说，
			不需要关心代码的复杂实现，只需要通过一个简单的入口就可以访问了。
			另外，类体中安全级别较高的数据封装起来，外部人员不能随意访问，
			来保证数据的安全性。
		
	6.3、怎么进行封装，代码怎么实现？
		第一步：属性私有化（使用private关键字进行修饰。）
		第二步：对外提供简单的操作入口。